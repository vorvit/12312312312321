#!/usr/bin/env python3

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from passlib.context import CryptContext
import sqlite3

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π
pwd_context = CryptContext(schemes=["bcrypt"], deprecated="auto")

def test_authentication():
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect('auth.db')
    cursor = conn.cursor()
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    cursor.execute('SELECT email, hashed_password, is_admin, is_active FROM users WHERE email = ?', ('vorvit@bk.ru',))
    user = cursor.fetchone()
    
    if not user:
        print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    email, hashed_password, is_admin, is_active = user
    print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: {email}")
    print(f"   is_admin: {is_admin}")
    print(f"   is_active: {is_active}")
    print(f"   password hash: {hashed_password[:50]}...")
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–æ–ª—è
    test_password = "123qwerty"
    print(f"\nüîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–æ–ª—è: {test_password}")
    
    password_valid = pwd_context.verify(test_password, hashed_password)
    print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏: {password_valid}")
    
    if password_valid:
        print("‚úÖ –ü–∞—Ä–æ–ª—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π!")
        return True
    else:
        print("‚ùå –ü–∞—Ä–æ–ª—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π!")
        
        # –ü–æ–ø—Ä–æ–±—É–µ–º –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–∞—Ä–æ–ª–µ–π
        common_passwords = ["123456", "password", "admin", "qwerty", "123qwerty", "vorvit"]
        print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø–∞—Ä–æ–ª–∏:")
        for pwd in common_passwords:
            if pwd_context.verify(pwd, hashed_password):
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å: {pwd}")
                return True
            else:
                print(f"‚ùå {pwd}")
        
        return False

if __name__ == "__main__":
    test_authentication()
