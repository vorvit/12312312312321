#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ TSP Viewer
–ó–∞–ø—É—Å–∫–∞–µ—Ç —Ç–æ–ª—å–∫–æ TSP Viewer –Ω–∞ –ø–æ—Ä—Ç—É 5174
"""

import subprocess
import sys
import os
import signal
from pathlib import Path

class ViewerManager:
    def __init__(self):
        self.process = None
        self.running = True
        
    def signal_handler(self, signum, frame):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"""
        print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ TSP Viewer...")
        self.running = False
        if self.process:
            self.process.terminate()
        sys.exit(0)
    
    def get_npm_command(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã npm –¥–ª—è —Ç–µ–∫—É—â–µ–π –û–°"""
        import platform
        
        # –°–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ npm
        npm_commands = [
            'npm',
            'npm.cmd',  # Windows
            'npx',
            'npx.cmd'   # Windows
        ]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –∫–æ–º–∞–Ω–¥—É
        for cmd in npm_commands:
            try:
                result = subprocess.run([cmd, '--version'], 
                                      capture_output=True, text=True, timeout=5)
                if result.returncode == 0:
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω npm: {cmd}")
                    return cmd
            except (FileNotFoundError, subprocess.TimeoutExpired):
                continue
        
        # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ shell
        if platform.system() == "Windows":
            try:
                # –ü—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ cmd
                result = subprocess.run(['cmd', '/c', 'npm', '--version'], 
                                      capture_output=True, text=True, timeout=5)
                if result.returncode == 0:
                    print("‚úÖ –ù–∞–π–¥–µ–Ω npm —á–µ—Ä–µ–∑ cmd")
                    return ['cmd', '/c', 'npm']
            except (FileNotFoundError, subprocess.TimeoutExpired):
                pass
        
        print("‚ùå npm –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js")
        print("   –°–∫–∞—á–∞–π—Ç–µ —Å: https://nodejs.org/")
        return None
    
    def start_viewer(self):
        """–ó–∞–ø—É—Å–∫ TSP Viewer"""
        print("üé® –ó–∞–ø—É—Å–∫ TSP Viewer...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é TSP
        tsp_dir = Path('TSP')
        if not tsp_dir.exists():
            print("‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è TSP –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º node_modules
        node_modules = tsp_dir / 'node_modules'
        if not node_modules.exists():
            print("‚ùå npm –ø–∞–∫–µ—Ç—ã –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
            print("   –í—ã–ø–æ–ª–Ω–∏—Ç–µ: cd TSP && npm install")
            return False
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É npm
        npm_cmd = self.get_npm_command()
        if not npm_cmd:
            return False
        
        try:
            # –ó–∞–ø—É—Å–∫–∞–µ–º Vite —Å–µ—Ä–≤–µ—Ä
            self.process = subprocess.Popen([
                npm_cmd, 'run', 'dev'
            ], cwd=tsp_dir)
            
            print("‚úÖ TSP Viewer –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:5174")
            print("   –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
            print("-" * 40)
            
            # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
            self.process.wait()
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ TSP Viewer: {e}")
            return False
    
    def run(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –∑–∞–ø—É—Å–∫–∞"""
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤
        signal.signal(signal.SIGINT, self.signal_handler)
        signal.signal(signal.SIGTERM, self.signal_handler)
        
        return self.start_viewer()

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    manager = ViewerManager()
    try:
        manager.run()
    except KeyboardInterrupt:
        print("\nüëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...")
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()
